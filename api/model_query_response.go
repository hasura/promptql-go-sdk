/*
PromptQL API

PromptQL API

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QueryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryResponse{}

// QueryResponse struct for QueryResponse
type QueryResponse struct {
	ThreadId string `json:"thread_id"`
	AssistantActions []ApiThreadAssistantAction `json:"assistant_actions"`
	// List of artifacts created or updated in this request. May contain duplicate artifact identifiers.
	ModifiedArtifacts []ExecuteRequestArtifactsInner `json:"modified_artifacts"`
}

type _QueryResponse QueryResponse

// NewQueryResponse instantiates a new QueryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryResponse(threadId string, assistantActions []ApiThreadAssistantAction, modifiedArtifacts []ExecuteRequestArtifactsInner) *QueryResponse {
	this := QueryResponse{}
	this.ThreadId = threadId
	this.AssistantActions = assistantActions
	this.ModifiedArtifacts = modifiedArtifacts
	return &this
}

// NewQueryResponseWithDefaults instantiates a new QueryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryResponseWithDefaults() *QueryResponse {
	this := QueryResponse{}
	return &this
}

// GetThreadId returns the ThreadId field value
func (o *QueryResponse) GetThreadId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ThreadId
}

// GetThreadIdOk returns a tuple with the ThreadId field value
// and a boolean to check if the value has been set.
func (o *QueryResponse) GetThreadIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThreadId, true
}

// SetThreadId sets field value
func (o *QueryResponse) SetThreadId(v string) {
	o.ThreadId = v
}

// GetAssistantActions returns the AssistantActions field value
func (o *QueryResponse) GetAssistantActions() []ApiThreadAssistantAction {
	if o == nil {
		var ret []ApiThreadAssistantAction
		return ret
	}

	return o.AssistantActions
}

// GetAssistantActionsOk returns a tuple with the AssistantActions field value
// and a boolean to check if the value has been set.
func (o *QueryResponse) GetAssistantActionsOk() ([]ApiThreadAssistantAction, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssistantActions, true
}

// SetAssistantActions sets field value
func (o *QueryResponse) SetAssistantActions(v []ApiThreadAssistantAction) {
	o.AssistantActions = v
}

// GetModifiedArtifacts returns the ModifiedArtifacts field value
func (o *QueryResponse) GetModifiedArtifacts() []ExecuteRequestArtifactsInner {
	if o == nil {
		var ret []ExecuteRequestArtifactsInner
		return ret
	}

	return o.ModifiedArtifacts
}

// GetModifiedArtifactsOk returns a tuple with the ModifiedArtifacts field value
// and a boolean to check if the value has been set.
func (o *QueryResponse) GetModifiedArtifactsOk() ([]ExecuteRequestArtifactsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedArtifacts, true
}

// SetModifiedArtifacts sets field value
func (o *QueryResponse) SetModifiedArtifacts(v []ExecuteRequestArtifactsInner) {
	o.ModifiedArtifacts = v
}

func (o QueryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["thread_id"] = o.ThreadId
	toSerialize["assistant_actions"] = o.AssistantActions
	toSerialize["modified_artifacts"] = o.ModifiedArtifacts
	return toSerialize, nil
}

func (o *QueryResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"thread_id",
		"assistant_actions",
		"modified_artifacts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueryResponse := _QueryResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueryResponse)

	if err != nil {
		return err
	}

	*o = QueryResponse(varQueryResponse)

	return err
}

type NullableQueryResponse struct {
	value *QueryResponse
	isSet bool
}

func (v NullableQueryResponse) Get() *QueryResponse {
	return v.value
}

func (v *NullableQueryResponse) Set(val *QueryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryResponse(val *QueryResponse) *NullableQueryResponse {
	return &NullableQueryResponse{value: val, isSet: true}
}

func (v NullableQueryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


