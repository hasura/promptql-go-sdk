/*
PromptQL API

PromptQL API

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiThreadInteraction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiThreadInteraction{}

// ApiThreadInteraction struct for ApiThreadInteraction
type ApiThreadInteraction struct {
	UserMessage ApiThreadUserMessage `json:"user_message"`
	AssistantActions []ApiThreadAssistantAction `json:"assistant_actions,omitempty"`
}

type _ApiThreadInteraction ApiThreadInteraction

// NewApiThreadInteraction instantiates a new ApiThreadInteraction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiThreadInteraction(userMessage ApiThreadUserMessage) *ApiThreadInteraction {
	this := ApiThreadInteraction{}
	this.UserMessage = userMessage
	return &this
}

// NewApiThreadInteractionWithDefaults instantiates a new ApiThreadInteraction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiThreadInteractionWithDefaults() *ApiThreadInteraction {
	this := ApiThreadInteraction{}
	return &this
}

// GetUserMessage returns the UserMessage field value
func (o *ApiThreadInteraction) GetUserMessage() ApiThreadUserMessage {
	if o == nil {
		var ret ApiThreadUserMessage
		return ret
	}

	return o.UserMessage
}

// GetUserMessageOk returns a tuple with the UserMessage field value
// and a boolean to check if the value has been set.
func (o *ApiThreadInteraction) GetUserMessageOk() (*ApiThreadUserMessage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserMessage, true
}

// SetUserMessage sets field value
func (o *ApiThreadInteraction) SetUserMessage(v ApiThreadUserMessage) {
	o.UserMessage = v
}

// GetAssistantActions returns the AssistantActions field value if set, zero value otherwise.
func (o *ApiThreadInteraction) GetAssistantActions() []ApiThreadAssistantAction {
	if o == nil || IsNil(o.AssistantActions) {
		var ret []ApiThreadAssistantAction
		return ret
	}
	return o.AssistantActions
}

// GetAssistantActionsOk returns a tuple with the AssistantActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiThreadInteraction) GetAssistantActionsOk() ([]ApiThreadAssistantAction, bool) {
	if o == nil || IsNil(o.AssistantActions) {
		return nil, false
	}
	return o.AssistantActions, true
}

// HasAssistantActions returns a boolean if a field has been set.
func (o *ApiThreadInteraction) HasAssistantActions() bool {
	if o != nil && !IsNil(o.AssistantActions) {
		return true
	}

	return false
}

// SetAssistantActions gets a reference to the given []ApiThreadAssistantAction and assigns it to the AssistantActions field.
func (o *ApiThreadInteraction) SetAssistantActions(v []ApiThreadAssistantAction) {
	o.AssistantActions = v
}

func (o ApiThreadInteraction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiThreadInteraction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_message"] = o.UserMessage
	if !IsNil(o.AssistantActions) {
		toSerialize["assistant_actions"] = o.AssistantActions
	}
	return toSerialize, nil
}

func (o *ApiThreadInteraction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user_message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiThreadInteraction := _ApiThreadInteraction{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiThreadInteraction)

	if err != nil {
		return err
	}

	*o = ApiThreadInteraction(varApiThreadInteraction)

	return err
}

type NullableApiThreadInteraction struct {
	value *ApiThreadInteraction
	isSet bool
}

func (v NullableApiThreadInteraction) Get() *ApiThreadInteraction {
	return v.value
}

func (v *NullableApiThreadInteraction) Set(val *ApiThreadInteraction) {
	v.value = val
	v.isSet = true
}

func (v NullableApiThreadInteraction) IsSet() bool {
	return v.isSet
}

func (v *NullableApiThreadInteraction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiThreadInteraction(val *ApiThreadInteraction) *NullableApiThreadInteraction {
	return &NullableApiThreadInteraction{value: val, isSet: true}
}

func (v NullableApiThreadInteraction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiThreadInteraction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


